<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>apigee</groupId>
		<artifactId>parent-pom</artifactId>
		<version>1.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>Apigee</groupId>
	<artifactId>payment-v1</artifactId>
	<version>1.0</version>
	<name>payment-v1</name>
	<packaging>pom</packaging>
	
	<pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Maven Plugin Repository</name>
            <url>http://repo1.maven.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>
    <!-- Since Maven 3.0.3, for two plugins bound to the same phase, the order 
         of execution is the same as the order in which you define them. -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>copy-resources-step-1</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${basedir}/target/apiproxy</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>apiproxy</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.apigee.build-tools.enterprise4g</groupId>
                <artifactId>apigee-edge-maven-plugin</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
                        <id>configure-bundle-step</id>
                        <phase>package</phase>
                        <goals>
                            <goal>configure</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy-bundle</id>
                        <phase>install</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.apigee.edge.config</groupId>
                <artifactId>apigee-config-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>create-config-targetserver</id>
                        <phase>verify</phase>                        
                        <goals>
                            <goal>targetservers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-kvm</id>
                        <phase>install</phase>                        
                        <goals>
                            <goal>keyvaluemaps</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-flowhook</id>
                        <phase>install</phase>                        
                        <goals>
                            <goal>flowhooks</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-apiproduct</id>
                        <phase>install</phase>                        
                        <goals>
                            <goal>apiproducts</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-developer</id>
                        <phase>install</phase>                        
                        <goals>
                            <goal>developers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-app</id>
                        <phase>install</phase>                        
                        <goals>
                            <goal>apps</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>            
<plugin>
				<groupId>io.apigee.build-tools.enterprise4g</groupId>
				<artifactId>apigee-edge-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>configure-bundle-step</id>
						<phase>package</phase>
						<goals>
							<goal>configure</goal>
						</goals>
					</execution>
					<!--deploy bundle -->
					<execution>
						<id>deploy-bundle-step</id>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<!-- npm install -->
					<execution>
						<id>npm-install</id>
						<phase>validate</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<commandlineArgs>
								install
							</commandlineArgs>
						</configuration>
					</execution>
					<!-- run unit tests -->
					<execution>
						<id>unit</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>node</executable>
							<commandlineArgs>
								node_modules/istanbul/lib/cli.js cover node_modules/mocha/bin/_mocha test/unit
							</commandlineArgs>
						</configuration>
					</execution>
					<!-- Check Code Coverage-->
					<!--<execution>
						<id>check-coverage</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>node</executable>
							<commandlineArgs>
								node_modules/istanbul/lib/cli.js check-coverage
							</commandlineArgs>
						</configuration>
					</execution>-->
					<!-- run apigeelint -->
					<!-- its got issues on Jenkins -->
					<execution>
						<id>apigeelint</id>
						<phase>validate</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>node</executable>
							<commandlineArgs>
								./node_modules/apigeelint/cli.js -s ./apiproxy -f table.js
							</commandlineArgs>
						</configuration>
					</execution>
					<!-- run integration tests -->
					<execution>
						<id>integration</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>./node_modules/cucumber/bin/cucumber.js</executable>
							<commandlineArgs>
								target/test/integration/features --tags ${api.testtag} --format json:target/reports.json
							</commandlineArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>test</id>
            <properties>
                <apigee.profile>test</apigee.profile>
                <apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
                <apigee.apiversion>v1</apigee.apiversion>
                <apigee.org>${orgname}</apigee.org>
                <apigee.env>test</apigee.env>
                <apigee.username>${username}</apigee.username>
                <apigee.password>${password}</apigee.password>
                <apigee.authtype>basic</apigee.authtype> <!-- optional: oauth|basic(default) -->
                <apigee.tokenurl>https://login.apigee.com/oauth/token</apigee.tokenurl> <!-- optional: oauth -->
                <apigee.mfatoken>${mfatoken}</apigee.mfatoken> <!-- optional: mfa -->
                <apigee.clientid>${clientId}</apigee.clientid> <!-- optional: Oauth Client Id - Default is edgecli-->
                <apigee.clientsecret>${clientSecret}</apigee.clientsecret> <!-- optional: Oauth Client Secret Default is edgeclisecret-->
                <apigee.bearer>${bearer}</apigee.bearer> <!-- optional: Bearer token override -->
                <apigee.refresh>${refresh}</apigee.refresh> <!-- optional: Refresh token override -->
                <apigee.apitype>${apitype}</apigee.apitype>
            </properties>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
